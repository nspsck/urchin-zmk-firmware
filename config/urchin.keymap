#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    tapping-term-ms = <180>;
    quick-tap-ms = <180>;
    require-prior-idle-ms = <150>;
    flavor = "tap-preferred";
    hold-trigger-on-release;
    hold-trigger-key-positions = <11 10 11 12 13 16 17 18 19>;
};

/ {
    behaviors {
        mod_kp: mod_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "hold-preferred";
            quick-tap-ms = <180>;
            hold-trigger-key-positions = <42 44 45 47 43 46 30 31 32 33>;
        };

        to_kp: to_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "TO_KP";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        mt_pinky: mt_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_PINKY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <10 19>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <2 1>;
            layers = <0 1>;
            require-prior-idle-ms = <300>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
            layers = <0 1>;
            require-prior-idle-ms = <300>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <7 6>;
            layers = <0 1>;
            require-prior-idle-ms = <300>;
            timeout-ms = <40>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <27 28>;
            layers = <0 1>;
            require-prior-idle-ms = <300>;
            timeout-ms = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "CMKDH";
            bindings = <
&kp Q             &kp W            &kp F           &kp P         &kp B  &kp J  &kp L         &kp U       &kp Y        &kp SEMI
&mt_pinky LGUI A  &mt LCTRL R      &mt LALT S      &mt LSHIFT T  &kp G  &kp M  &mt RSHIFT N  &mt RALT E  &mt RCTRL I  &mt_pinky RGUI O
&kp Z             &kp X            &kp C           &kp D         &kp V  &kp K  &kp H         &kp COMMA   &kp DOT      &kp FSLH
&mo 2             &mod_kp 5 SPACE  &to_kp 1 ENTER  &mo 3
            >;
        };

        layer_1 {
            display-name = "QWERTY";
            bindings = <
&kp Q             &kp W            &kp E           &kp R         &kp T  &kp Y  &kp U         &kp I       &kp O        &kp P
&mt_pinky LGUI A  &mt LCTRL S      &mt LALT D      &mt LSHIFT F  &kp G  &kp H  &mt RSHIFT J  &mt RALT K  &mt RCTRL L  &mt_pinky RGUI SEMI
&kp Z             &kp X            &kp C           &kp V         &kp B  &kp N  &kp M         &kp COMMA   &kp DOT      &kp FSLH
&mo 2             &mod_kp 5 SPACE  &to_kp 0 ENTER  &mo 3
            >;
        };

        layer_2 {
            display-name = "SYMNUM";
            bindings = <
&kp LS(EXCL)          &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp PIPE      &kp BSLH
&mt_pinky LGUI N1     &mt LCTRL N2  &mt LALT N3    &mt LSHIFT N4  &kp N5         &kp N6         &mt RSHIFT N7  &mt RALT N8   &mt RCTRL N9  &mt_pinky RGUI N0
&mt_pinky PLUS EQUAL  &kp LBKT      &kp LBRC       &kp LPAR       &kp TILDE      &kp GRAVE      &kp RPAR       &kp RBRC      &kp RBKT      &mt_pinky UNDERSCORE MINUS
&trans                &none         &kp CAPS       &trans
            >;
        };

        layer_3 {
            display-name = "FN";
            bindings = <
&kp F1             &kp F2        &kp F3       &kp F4         &kp F5      &kp C_MUTE    &kp C_VOL_DN     &kp C_VOL_UP  &kp C_PLAY_PAUSE  &soft_off
&mt_pinky LGUI F6  &mt LCTRL F7  &mt LALT F8  &mt LSHIFT F9  &kp F10     &kp LEFT      &mt RSHIFT DOWN  &mt LALT UP   &mt RCTRL RIGHT   &kp LGUI
&kp F11            &kp F12       &none        &none          &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4
&trans             &kp DELETE    &none        &trans
            >;
        };

        layer_4 {
            display-name = "MOUSE";
            bindings = <
&bootloader      &mkp MB2        &mmv MOVE_UP    &mkp MB1         &kp PRINTSCREEN  &mkp MCLK  &kp KP_N7         &kp KP_N8       &kp KP_N9        &bootloader
&msc SCRL_RIGHT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP     &mkp MB1   &mt RSHIFT KP_N4  &mt RALT KP_N5  &mt RCTRL KP_N6  &mt_pinky RGUI KP_N0
&msc SCRL_LEFT   &mkp MB4        &mkp MCLK       &mkp MB5         &msc SCRL_DOWN   &mkp MB2   &kp KP_N1         &kp KP_N2       &kp KP_N3        &kp KP_NUM
&trans           &none           &none           &trans
            >;
        };

        layer_5 {
            display-name = "WM";
            bindings = <
&kp LS(LG(N1))  &kp LS(LG(N2))  &kp LS(LG(N3))  &kp LS(LG(N4))  &kp LS(LG(N5))  &kp LS(LG(N6))  &kp LS(LG(N7))  &kp LS(LG(N8))  &kp LS(LG(N9))  &kp LS(LG(N0))
&kp LG(N1)      &kp LG(N2)      &kp LG(N3)      &kp LG(N4)      &kp LG(N5)      &kp LG(N6)      &kp LG(N7)      &kp LG(N8)      &kp LG(N9)      &kp LG(N0)
&none           &none           &none           &none           &none           &none           &none           &none           &none           &none
&none           &trans          &none           &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        MOUSENUMPAD {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
